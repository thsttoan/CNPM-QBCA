@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>QBCA - Change Password</title>
    <style>
    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f6f9;
    }

    .background-shapes {
        position: absolute;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -1;
    }

    .shape {
        position: absolute;
        width: 200px;
        height: 200px;
        border-radius: 50%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        opacity: 0.2;
        animation: float 6s ease-in-out infinite;
    }

    .shape:nth-child(1) { top: 10%; left: 10%; }
    .shape:nth-child(2) { top: 20%; right: 15%; animation-delay: 2s; }
    .shape:nth-child(3) { bottom: 15%; left: 20%; animation-delay: 4s; }
    .shape:nth-child(4) { bottom: 10%; right: 10%; animation-delay: 6s; }

    @@keyframes float {
        0%, 100% { transform: translateY(0); }
        50% { transform: translateY(-20px); }
    }

    .change-password-container {
        position: relative;
        max-width: 450px;
        margin: 60px auto;
        padding: 40px;
        background-color: white;
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        z-index: 1;
    }

    .logo {
        font-size: 64px;
        font-weight: bold;
        text-align: center;
        color: #667eea;
    }

    .logo-text {
        text-align: center;
        font-size: 24px;
        font-weight: 600;
        margin-top: 10px;
        color: #333;
    }

    .logo-subtitle {
        text-align: center;
        font-size: 14px;
        color: #666;
        margin-bottom: 20px;
    }

    .user-info {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 8px;
        margin-bottom: 25px;
        border-left: 4px solid #667eea;
    }

    .user-info h4 {
        margin: 0 0 5px 0;
        color: #333;
        font-size: 16px;
        font-weight: 600;
    }

    .user-info p {
        margin: 0;
        color: #666;
        font-size: 14px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-label {
        display: block;
        margin-bottom: 5px;
        color: #333;
        font-weight: 600;
    }

    .form-input {
        width: 100%;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 14px;
        box-sizing: border-box;
        transition: border-color 0.3s ease;
    }

    .form-input:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.1);
    }

    .password-toggle {
        position: absolute;
        right: 12px;
        top: 37px;
        background: none;
        border: none;
        cursor: pointer;
        font-size: 16px;
        color: #777;
        transition: color 0.3s ease;
    }

    .password-toggle:hover {
        color: #667eea;
    }

    .change-password-button {
        width: 100%;
        padding: 12px;
        background-color: #667eea;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 16px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 10px;
    }

    .change-password-button:hover {
        background-color: #5a67d8;
    }

    .back-link {
        display: inline-block;
        margin-top: 20px;
        color: #667eea;
        text-decoration: none;
        font-size: 14px;
        transition: color 0.3s ease;
    }

    .back-link:hover {
        color: #5a67d8;
        text-decoration: underline;
    }

    .footer-text {
        text-align: center;
        margin-top: 30px;
        font-size: 12px;
        color: #999;
    }

    .validation-summary-errors ul {
        list-style-type: none;
        padding-left: 0;
        color: #dc3545;
        margin-bottom: 15px;
        background-color: #f8d7da;
        border: 1px solid #f5c6cb;
        border-radius: 5px;
        padding: 10px;
    }

    .validation-summary-errors li {
        margin-bottom: 5px;
    }

    .text-danger {
        color: #dc3545;
        font-size: 0.9em;
        margin-top: 5px;
        display: block;
    }

    .success-message {
        background-color: #d4edda;
        color: #155724;
        border: 1px solid #c3e6cb;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 20px;
        text-align: center;
    }

    .password-requirements {
        font-size: 12px;
        color: #666;
        margin-top: 5px;
        line-height: 1.4;
    }

    </style>
</head>

<body>
    <div class="background-shapes">
        <div class="shape"></div><div class="shape"></div><div class="shape"></div><div class="shape"></div>
    </div>

    <div class="change-password-container">
        <div class="logo">🔒</div>
        <div class="logo-text">Change Password</div>
        <div class="logo-subtitle">Update your account password</div>

        <div class="user-info">
            <h4>@ViewBag.FullName</h4>
            <p>@ViewBag.Email</p>
        </div>

        @if (!string.IsNullOrEmpty(ViewBag.Message))
        {
            <div class="success-message">
                @ViewBag.Message
            </div>
        }

        @model QBCA.Models.ChangePasswordViewModel

        @using (Html.BeginForm("ChangePassword", "Auth", FormMethod.Post, new { id = "changePasswordForm" }))
        {
            @Html.AntiForgeryToken()

            @if (ViewData.ModelState.Values.Any(v => v.Errors.Count > 0))
            {
                @Html.ValidationSummary(false, "", new { @class = "text-danger validation-summary-errors" })
            }

            <div class="form-group" style="position: relative;">
                <label asp-for="CurrentPassword" class="form-label">Current Password</label>
                @Html.PasswordFor(m => m.CurrentPassword, new { @class = "form-input", placeholder = "Enter your current password", id = "currentPassword" })
                <button type="button" class="password-toggle" onclick="togglePassword('currentPassword', this)">👁</button>
                @Html.ValidationMessageFor(m => m.CurrentPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group" style="position: relative;">
                <label asp-for="NewPassword" class="form-label">New Password</label>
                @Html.PasswordFor(m => m.NewPassword, new { @class = "form-input", placeholder = "Enter your new password", id = "newPassword" })
                <button type="button" class="password-toggle" onclick="togglePassword('newPassword', this)">👁</button>
                @Html.ValidationMessageFor(m => m.NewPassword, "", new { @class = "text-danger" })
                <div class="password-requirements">
                    Password should be at least 6 characters long and contain a mix of letters and numbers.
                </div>
            </div>

            <div class="form-group" style="position: relative;">
                <label asp-for="ConfirmPassword" class="form-label">Confirm New Password</label>
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-input", placeholder = "Confirm your new password", id = "confirmPassword" })
                <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword', this)">👁</button>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>

            <button type="submit" class="change-password-button">
                Update Password
            </button>
        }

        <a href="@Url.Action("Index", "Home")" class="back-link">← Back to Dashboard</a>

        <div class="footer-text">© 2025 UTH University - R&D Department</div>
    </div>

    <script>
        function togglePassword(inputId, button) {
            const passwordInput = document.getElementById(inputId);
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                button.textContent = '🙈';
            } else {
                passwordInput.type = 'password';
                button.textContent = '👁';
            }
        }

        // Form validation
        document.getElementById('changePasswordForm').addEventListener('submit', function(e) {
            const newPassword = document.getElementById('newPassword').value;
            const confirmPassword = document.getElementById('confirmPassword').value;
            
            if (newPassword !== confirmPassword) {
                e.preventDefault();
                alert('New password and confirmation password do not match.');
                return false;
            }
            
            if (newPassword.length < 6) {
                e.preventDefault();
                alert('Password must be at least 6 characters long.');
                return false;
            }
        });

        // Auto-hide success message after 5 seconds
        setTimeout(function() {
            const successMessage = document.querySelector('.success-message');
            if (successMessage) {
                successMessage.style.opacity = '0';
                setTimeout(function() {
                    successMessage.style.display = 'none';
                }, 300);
            }
        }, 5000);
    </script>
</body>
</html>