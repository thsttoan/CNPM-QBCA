@model QBCA.Models.ExamPlanCreateViewModel
@using System.Text.Json
@{
    ViewBag.Title = "Edit Exam Plan & Distribution";
    Layout = "~/Views/Shared/_LayoutHome.cshtml";
    if (Model.Distributions == null || Model.Distributions.Count == 0)
    {
        Model.Distributions = new List<QBCA.Models.PlanDistributionViewModel> { new QBCA.Models.PlanDistributionViewModel() };
    }
}
<style>
    .neumorphic-box {
        background: #f2f3f7;
        border-radius: 25px;
        box-shadow: 8px 8px 16px #d1d9e6, -8px -8px 16px #ffffff;
        padding: 40px;
        max-width: 560px;
        margin: auto;
    }

    .neumorphic-label {
        font-weight: 600;
        color: #36395A;
        margin-bottom: 7px;
        margin-left: 2px;
        display: block;
        letter-spacing: 0.02em;
    }

    .neumorphic-input, .neumorphic-select {
        border: none;
        outline: none;
        background: #f2f3f7;
        border-radius: 12px;
        padding: 14px 20px;
        box-shadow: inset 6px 6px 10px #d1d9e6, inset -6px -6px 10px #ffffff;
        width: 100%;
        box-sizing: border-box;
        font-size: 16px;
        margin-bottom: 22px;
    }

    .neumorphic-button {
        background-color: #ff9800;
        color: white;
        padding: 12px 25px;
        font-weight: 600;
        border: none;
        border-radius: 12px;
        width: 100%;
        box-sizing: border-box;
        box-shadow: 3px 3px 8px rgba(0,0,0,0.1);
        transition: 0.2s;
        margin-top: 16px;
        margin-bottom: 8px;
        font-size: 1.13rem;
    }

        .neumorphic-button:hover {
            background-color: #ff7c01;
        }

    .text-danger.small {
        font-size: .98em;
        margin-left: 3px;
    }

    .add-dist-btn {
        margin-bottom: 12px;
        background: #22c55e;
        color: white;
        border: none;
        border-radius: 9px;
        padding: 7px 19px;
        font-weight: 600;
        font-size: 1.02em;
        transition: 0.2s;
    }

        .add-dist-btn:hover {
            background: #16a34a;
            color: white;
        }

    #dist-table th, #dist-table td {
        text-align: center;
        vertical-align: middle;
    }

    #dist-table th {
        font-weight: 600;
        color: #36395A;
    }

    #dist-table td {
        padding-left: 6px;
        padding-right: 6px;
    }

    #dist-table .neumorphic-select,
    #dist-table .neumorphic-input {
        margin-bottom: 0;
    }
</style>
<section class="min-vh-100 d-flex align-items-start justify-content-center bg-light" style="padding-top: 120px;">
    <div class="neumorphic-box">
        <h3 class="text-center fw-bold mb-4 text-dark">
            <span style="color:#ff9800;"><i class="fas fa-edit"></i></span> Edit Exam Plan & Distribution
        </h3>
        @using (Html.BeginForm("Edit", "ExamPlan", FormMethod.Post, new { id = "plan-form" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.ExamPlanID)
            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

            <label class="neumorphic-label" for="PlanName">Plan Name</label>
            @Html.TextBoxFor(model => model.PlanName, new { @class = "neumorphic-input", placeholder = "Plan Name", id = "PlanName" })
            @Html.ValidationMessageFor(model => model.PlanName, "", new { @class = "text-danger small" })

            <label class="neumorphic-label" for="SubjectID">Subject</label>
            @Html.DropDownListFor(model => model.SubjectID,
            new SelectList(Model.AllSubjects, "SubjectID", "SubjectName", Model.SubjectID),
                "Select Subject",
                new { @class = "neumorphic-select", id = "SubjectID" })
        @Html.ValidationMessageFor(model => model.SubjectID, "", new { @class = "text-danger small" })

        <label class="neumorphic-label" for="Status">Status</label>
        @Html.DropDownListFor(model => model.Status,
                new SelectList(Model.StatusOptions, Model.Status),
                "Select Status",
                new { @class = "neumorphic-select", id = "Status" })
        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger small" })

        <hr style="margin: 18px 0 12px 0;">
        <h5 class="mb-2" style="color:#6d82f3; font-weight:600;">Plan Distribution Details</h5>
        <button type="button" class="add-dist-btn" onclick="addDistributionRow()">+ Add Distribution</button>
        <div>
            <table class="table table-sm table-borderless" id="dist-table" style="table-layout: fixed; width: 100%;">
                <colgroup>
                    <col style="width: 33%;">
                    <col style="width: 33%;">
                    <col style="width: 34%;">
                </colgroup>
                <thead>
                    <tr>
                        <th>Difficulty Level</th>
                        <th>Number of Questions</th>
                        <th>Manager Role</th>
                    </tr>
                </thead>
                <tbody id="dist-tbody">
                    @for (int i = 0; i < Model.Distributions.Count; i++)
                        {
                            <tr>
                                <td>
                                    @Html.DropDownListFor(m => m.Distributions[i].DifficultyLevelID,
                                    new SelectList(Model.AllDifficultyLevels, "DifficultyLevelID", "LevelName", Model.Distributions[i].DifficultyLevelID),
                                                        "Select Level",
                                                        new { @class = "neumorphic-select" })
                            @Html.ValidationMessage("Distributions[" + i + "].DifficultyLevelID", "", new { @class = "text-danger small" })
                        </td>
                        <td>
                            @Html.TextBoxFor(m => m.Distributions[i].NumberOfQuestions, new { @class = "neumorphic-input", type = "number", min = "1", placeholder = "Number" })
                            @Html.ValidationMessage("Distributions[" + i + "].NumberOfQuestions", "", new { @class = "text-danger small" })
                        </td>
                        <td>
                            @Html.DropDownListFor(m => m.Distributions[i].AssignedManagerRoleID,
                                                        new SelectList(Model.AllManagerRoles, "RoleID", "RoleName", Model.Distributions[i].AssignedManagerRoleID),
                                                        "Select Manager Role",
                                                        new { @class = "neumorphic-select" })
                            @Html.ValidationMessage("Distributions[" + i + "].AssignedManagerRoleID", "", new { @class = "text-danger small" })
                        </td>
                    </tr>
                                        }
                </tbody>
            </table>
        </div>
        <button type="submit" class="neumorphic-button">Save Changes</button>
        <a href="@Url.Action("ExamPlans", "ExamPlan")" class="btn btn-link w-100 text-center" style="font-weight:500;">Cancel</a>
                }
    </div>
</section>
<script>
    var roles = @Html.Raw(JsonSerializer.Serialize(
                Model.AllManagerRoles.Select(x => new { x.RoleID, x.RoleName })
        ));
    var initialDifficulties = @Html.Raw(JsonSerializer.Serialize(
                Model.AllDifficultyLevels.Select(x => new { x.DifficultyLevelID, x.LevelName })
        ));
    window.filteredDifficulties = initialDifficulties;

    function addDistributionRow() {
        var idx = $("#dist-tbody tr").length;
        var difficulties = window.filteredDifficulties || [];
        var row = `<tr>
            <td>
                <select name="Distributions[${idx}].DifficultyLevelID" class="neumorphic-select">
                    <option value="">Select Level</option>
                    ${difficulties.map(d => `<option value="${d.DifficultyLevelID}">${d.LevelName}</option>`).join('')}
                </select>
            </td>
            <td>
                <input type="number" name="Distributions[${idx}].NumberOfQuestions" class="neumorphic-input" min="1" placeholder="Number" />
            </td>
            <td>
                <select name="Distributions[${idx}].AssignedManagerRoleID" class="neumorphic-select">
                    <option value="">Select Manager Role</option>
                    ${roles.map(r => `<option value="${r.RoleID}">${r.RoleName}</option>`).join('')}
                </select>
            </td>
        </tr>`;
        $("#dist-tbody").append(row);
    }

    $("#SubjectID").change(function () {
        var subjectId = $(this).val();
        if (!subjectId) return;
        $.ajax({
            url: '/ExamPlan/GetDifficultyLevelsBySubject/' + subjectId,
            method: 'GET',
            success: function (data) {
                window.filteredDifficulties = data;
                $("#dist-tbody tr").each(function () {
                    var ddl = $(this).find("select[name$='.DifficultyLevelID']");
                    var selected = ddl.val();
                    ddl.empty();
                    ddl.append('<option value="">Select Level</option>');
                    data.forEach(function (item) {
                        ddl.append('<option value="' + item.DifficultyLevelID + '"' +
                            (selected == item.DifficultyLevelID ? ' selected' : '') +
                            '>' + item.LevelName + '</option>');
                    });
                });
            }
        });
    });

    $(function() {
        $("#SubjectID").trigger("change");
    });
</script>